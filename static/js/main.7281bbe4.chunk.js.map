{"version":3,"sources":["components/UI/MyModal/MyModal.module.css","components/UI/Loader/Loader.module.css","components/UI/button/Mybutton.module.css","components/UI/select/MySelect.module.css","components/UI/input/MyInput.module.css","components/PostList.jsx","components/PostForm.jsx","components/PostFilter.jsx","components/UI/button/MyButton.jsx","components/UI/Loader/Loader.jsx","components/UI/MyModal/MyModal.jsx","components/UI/select/MySelect.jsx","utils/pages.js","components/UI/pagination/Pagination.jsx","context/index.js","components/UI/Navbar/Navbar.jsx","API/PostService.js","hooks/useFetching.js","hooks/usePost.js","hooks/useObserver.js","pages/Posts.jsx","router/router.js","pages/About.jsx","pages/PostIdPage.jsx","pages/Login.jsx","components/UI/AppRouter.jsx","components/UI/input/MyInput.jsx","components/PostItem.jsx","App.js","index.js"],"names":["module","exports","PostList","posts","title","remove","length","map","post","index","number","id","PostForm","create","useState","body","setPost","className","onChange","e","target","value","type","placeholder","onClick","preventDefault","newPost","Date","now","PostFilter","filter","setFilter","query","sort","selectedSort","defaultValue","options","name","MyButton","children","props","classes","myBtn","Loader","cl","loader__container","loader","MyModal","visible","setVisible","rootClasses","myModal","push","active","join","myModalContent","stopPropagation","MySelect","mySelect","disabled","option","getPageCount","totalCount","limit","Math","ceil","Pagination","totalPages","page","changePage","pagesArray","result","i","getPagesArray","p","AuthContext","createContext","Navbar","useContext","isAuth","setIsAuth","to","localStorage","removeItem","PostService","axios","get","params","_limit","_page","response","useFetching","callback","isLoading","setIsLoading","error","setError","a","message","usePosts","sortedPosts","useMemo","b","localeCompare","useSortedPosts","toLowerCase","includes","useObserver","ref","canLoad","observer","useRef","useEffect","current","disconnect","IntersectionObserver","entries","isIntersecting","observe","Posts","privateRoutes","path","component","exact","setPosts","modal","setModal","setTotalPages","setLimit","setPage","sortedAndSearchedPosts","lastElement","getAll","data","headers","fetchPosts","isPostsLoading","postError","useParams","comments","setComments","getById","fetchPostById","getCommentsByPostId","fetchComments","isComLoading","c","email","publicRoutes","onSubmit","setItem","AppRouter","route","MyInput","React","forwardRef","myInput","PostItem","router","useHistory","App","setLoading","getItem","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7281bbe4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"myModal\":\"MyModal_myModal__1u4Cf\",\"myModalContent\":\"MyModal_myModalContent__1Jt4v\",\"active\":\"MyModal_active__3eXdC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__3mPDW\",\"rotate\":\"Loader_rotate__HXzid\",\"loader__container\":\"Loader_loader__container__2qp1R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myBtn\":\"Mybutton_myBtn__2yxXZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mySelect\":\"MySelect_mySelect__3g5TE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myInput\":\"MyInput_myInput__3vdUj\"};","import React from 'react'\r\nimport { PostItem } from '../components/index'\r\n\r\nconst PostList = ({ posts, title, remove }) => {\r\n    if (!posts.length) {\r\n        return (\r\n            <h1>Посты не найдены</h1>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>{title}</h1>\r\n            {posts.map((post, index) =>\r\n                <PostItem\r\n                    remove={remove}\r\n                    key={post.id}\r\n                    number={index + 1} post={post} />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostList\r\n","import React, { useState } from 'react'\r\nimport { MyButton, MyInput } from '../components/index'\r\n\r\nconst PostForm = ({ create }) => {\r\n\r\n    const [post, setPost] = useState({ title: '', body: '' })\r\n\r\n    const addNewPost = (e) => {\r\n        // предотвращаем дефолтное действие браузера (перезагрузка страницы при сабмите формы)\r\n        e.preventDefault()\r\n        const newPost = {\r\n            ...post, id: Date.now()\r\n        }\r\n        create(newPost)\r\n        setPost({ title: '', body: '' })\r\n    }\r\n\r\n    return (\r\n        <form className=\"post__form\">\r\n            <MyInput\r\n                onChange={(e) => setPost({ ...post, title: e.target.value })}\r\n                value={post.title}\r\n                type=\"text\"\r\n                placeholder=\"Название поста\">\r\n            </MyInput>\r\n            <MyInput\r\n                onChange={(e) => setPost({ ...post, body: e.target.value })}\r\n                value={post.body}\r\n                type=\"text\"\r\n                placeholder=\"Описание поста\"></MyInput>\r\n            <div className=\"add-post-btn\">\r\n                <MyButton onClick={addNewPost} >Добавить пост</MyButton>\r\n\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PostForm\r\n","import React from 'react'\r\nimport { MyInput, MySelect } from '../components/index'\r\n\r\nconst PostFilter = ({ filter, setFilter }) => {\r\n    return (\r\n        <div>\r\n            <MyInput\r\n                placeholder=\"Поиск...\"\r\n                onChange={e => setFilter({ ...filter, query: e.target.value })}\r\n                value={filter.query} />\r\n            <MySelect\r\n                value={filter.sort}\r\n                onChange={selectedSort => setFilter({ ...filter, sort: selectedSort })}\r\n                defaultValue=\"Сортировка :\"\r\n                options={[\r\n                    { value: \"title\", name: \"По названию\" },\r\n                    { value: \"body\", name: \"По описанию\" }\r\n                ]}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostFilter\r\n","import React, { Children } from 'react'\r\nimport classes from './Mybutton.module.css'\r\n\r\nconst MyButton = ({ children, ...props }) => {\r\n    return (\r\n        <button {...props} className={classes.myBtn}>\r\n            {children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default MyButton\r\n","import React from 'react'\r\nimport cl from './Loader.module.css'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className={cl.loader__container}>\r\n            <div className={cl.loader}>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport cl from './MyModal.module.css'\r\n\r\nconst MyModal = ({ children, visible, setVisible }) => {\r\n\r\n    const rootClasses = [cl.myModal]\r\n    if (visible) {\r\n        rootClasses.push(cl.active)\r\n    }\r\n    return (\r\n        <div className={rootClasses.join(' ')}\r\n            onClick={() => setVisible(false)}>\r\n            <div\r\n                className={cl.myModalContent}\r\n                onClick={e => e.stopPropagation()}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyModal\r\n","import React from 'react'\r\nimport cl from './MySelect.module.css'\r\n\r\nconst MySelect = ({ options, defaultValue, value, onChange }) => {\r\n    return (\r\n        <select className={cl.mySelect}\r\n            value={value}\r\n            onChange={e => onChange(e.target.value)}\r\n        >\r\n            <option value=\"\" disabled>{defaultValue}</option>\r\n            {options.map(option =>\r\n                <option key={option.value} value={option.value}>\r\n                    {option.name}\r\n                </option>\r\n            )}\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default MySelect\r\n","export const getPageCount = (totalCount, limit) => {\r\n    return Math.ceil(totalCount / limit)\r\n}\r\n\r\n\r\nexport const getPagesArray = (totalPages) => {\r\n    let result = []\r\n    for (let i = 0; i < totalPages; i++) {\r\n        result.push(i + 1)\r\n    }\r\n    return result\r\n}","import React from 'react'\r\nimport { getPagesArray } from '../../../utils/pages'\r\n\r\nconst Pagination = ({ totalPages, page, changePage }) => {\r\n    let pagesArray = getPagesArray(totalPages)\r\n\r\n    return (\r\n        <div className=\"page__wrapper\">\r\n            {pagesArray.map(p =>\r\n                <span\r\n                    onClick={() => changePage(p)}\r\n                    className={page === p ? 'page page__current' : 'page'}\r\n                    key={p}>\r\n                    {p}\r\n                </span>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination\r\n","import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext(null)","import React, { useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { AuthContext } from '../../../context'\r\nimport { MyButton } from '../../index'\r\n\r\nconst Navbar = () => {\r\n    const { isAuth, setIsAuth } = useContext(AuthContext)\r\n\r\n    const logout = () => {\r\n        setIsAuth(false)\r\n        localStorage.removeItem('auth')\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar\">\r\n            <div className=\"container\">\r\n                <div className=\"navbar__content\">\r\n                    <div className=\"navbar__links\">\r\n                        <Link className=\"navbar__links--item\" to=\"/posts\" >Posts</Link>\r\n                        <Link className=\"navbar__links--item\" to=\"/about\" >About</Link>\r\n                    </div>\r\n                    {isAuth &&\r\n                        <div className=\"navbar__btn\">\r\n                            <MyButton onClick={logout}>Выйти</MyButton>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import axios from \"axios\"\r\n\r\nexport default class PostService {\r\n    static async getAll(limit = 10, page = 1) {\r\n        const response = await axios.get('https://jsonplaceholder.typicode.com/posts', {\r\n            params: {\r\n                _limit: limit,\r\n                _page: page,\r\n            }\r\n        })\r\n        return response\r\n    }\r\n\r\n    static async getById(id) {\r\n        const response = await axios.get('https://jsonplaceholder.typicode.com/posts/' + id)\r\n        return response\r\n    }\r\n    static async getCommentsByPostId(id) {\r\n        const response = await axios.get(`https://jsonplaceholder.typicode.com/posts/${id}/comments`)\r\n        return response\r\n    }\r\n}\r\n\r\n","import { useState } from \"react\"\r\n\r\nconst useFetching = (callback) => {\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [error, setError] = useState('')\r\n\r\n    const fetching = async (...args) => {\r\n        try {\r\n            setIsLoading(true)\r\n            await callback(...args)\r\n        }\r\n        catch (e) {\r\n            setError(e.message)\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n    return [fetching, isLoading, error]\r\n}\r\n\r\nexport default useFetching","import { useMemo } from \"react\";\r\n\r\nexport const useSortedPosts = (posts, sort) => {\r\n    const sortedPosts = useMemo(() => {\r\n        if (sort) {\r\n            return [...posts].sort((a, b) => a[sort].localeCompare(b[sort]))\r\n        }\r\n        return posts;\r\n    }, [sort, posts])\r\n    return sortedPosts\r\n}\r\n\r\nconst usePosts = (posts, sort, query) => {\r\n    const sortedPosts = useSortedPosts(posts, sort)\r\n\r\n    const sortedAndSearchedPosts = useMemo(() => {\r\n        return sortedPosts.filter(post => post.title.toLowerCase().includes(query.toLowerCase()))\r\n    }, [query, sortedPosts])\r\n    return sortedAndSearchedPosts\r\n}\r\nexport default usePosts","import { useEffect, useRef } from \"react\"\r\n\r\nconst useObserver = (ref, canLoad, isLoading, callback) => {\r\n\r\n    const observer = useRef()\r\n    useEffect(() => {\r\n        if (isLoading) return\r\n        if (observer.current) observer.current.disconnect()\r\n        var cb = function (entries, observer) {\r\n            if (entries[0].isIntersecting && canLoad) {\r\n                callback()\r\n            }\r\n        }\r\n        observer.current = new IntersectionObserver(cb)\r\n        observer.current.observe(ref.current)\r\n    }, [isLoading])\r\n}\r\nexport default useObserver","import React, { useEffect, useRef, useState } from 'react';\r\n\r\nimport PostService from '../API/PostService';\r\nimport { PostList, PostForm, PostFilter, MyButton, Loader, MyModal, MySelect, Pagination } from '../components/index';\r\nimport { useFetching, useObserver, usePosts } from '../hooks/index';\r\nimport { getPageCount } from '../utils/pages';\r\n\r\nimport '../styles/App.css'\r\n\r\nfunction Posts() {\r\n    const [posts, setPosts] = useState([])\r\n    const [filter, setFilter] = useState({ sort: \"\", query: \"\" })\r\n    const [modal, setModal] = useState(false)\r\n    const [totalPages, setTotalPages] = useState(0)\r\n    const [limit, setLimit] = useState(10)\r\n    const [page, setPage] = useState(1)\r\n    const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query)\r\n\r\n    const lastElement = useRef()\r\n\r\n    const [fetchPosts, isPostsLoading, postError] = useFetching(async (limit, page) => {\r\n        const response = await PostService.getAll(limit, page)\r\n        setPosts([...posts, ...response.data])\r\n        const totalCount = response.headers['x-total-count']\r\n        setTotalPages(getPageCount(totalCount, limit))\r\n    })\r\n\r\n\r\n    useObserver(lastElement, page < totalPages, isPostsLoading, () => {\r\n        setPage(page + 1)\r\n    })\r\n    useEffect(() => {\r\n        fetchPosts(limit, page)\r\n    }, [page, limit])\r\n\r\n    const createPost = (newPost) => {\r\n        setPosts([...posts, newPost])\r\n        setModal(false)\r\n    }\r\n\r\n    const removePost = (post) => {\r\n        setPosts(posts.filter(p => p.id !== post.id))\r\n    }\r\n\r\n    const changePage = (page) => {\r\n        setPage(page)\r\n    }\r\n\r\n    return (\r\n        <div className=\"posts\">\r\n            <MyModal visible={modal} setVisible={setModal}>\r\n                <PostForm create={createPost} />\r\n            </MyModal>\r\n            <div className=\"posts__sort\">\r\n                <div className=\"posts__sort-content\">\r\n                    <PostFilter\r\n                        filter={filter}\r\n                        setFilter={setFilter} />\r\n                    <MySelect\r\n                        onChange={value => setLimit(value)}\r\n                        value={limit}\r\n                        defaultValue={\"Подгружать по:\"}\r\n                        options={[\r\n                            { value: 5, name: \"5\" },\r\n                            { value: 10, name: \"10\" },\r\n                            { value: 25, name: \"25\" },\r\n                            { value: -1, name: \"Все\" },\r\n                        ]} />\r\n                </div>\r\n            </div>\r\n            <div className=\"add-post-btn\">\r\n                <MyButton onClick={() => setModal(true)}>Создать пост</MyButton>\r\n            </div>\r\n            {postError &&\r\n                <h1>Произошла ошибка {postError}</h1>}\r\n            <PostList remove={removePost}\r\n                posts={sortedAndSearchedPosts}\r\n                title={\"Посты\"} />\r\n            <div ref={lastElement} className=\"lastElement\"></div>\r\n            {isPostsLoading &&\r\n                <Loader />\r\n            }\r\n            <Pagination page={page}\r\n                changePage={changePage}\r\n                totalPages={totalPages} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Posts;\r\n","import { PostIdPage, Posts, About, Login } from \"../pages/index\";\r\n\r\nexport const privateRoutes = [\r\n    { path: '/about', component: About, exact: true },\r\n    { path: '/posts', component: Posts, exact: true },\r\n    { path: '/posts/:id', component: PostIdPage, exact: true },\r\n]\r\n\r\nexport const publicRoutes = [\r\n    { path: '/login', component: Login, exact: true },\r\n]","import React from 'react'\r\n\r\nconst About = () => {\r\n    return (\r\n        <div className=\"aboutPage\">\r\n            <h1>About</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport PostService from '../API/PostService'\r\nimport { Loader } from '../components/index'\r\nimport { useFetching } from '../hooks/index'\r\n\r\nconst PostIdPage = () => {\r\n    // хук для выцепления параметра из URL\r\n    const params = useParams()\r\n    const [post, setPost] = useState({})\r\n    const [comments, setComments] = useState([])\r\n\r\n    const [fetchPostById, isLoading, error] = useFetching(async (id) => {\r\n        const response = await PostService.getById(id)\r\n        setPost(response.data)\r\n    })\r\n    const [fetchComments, isComLoading, comError] = useFetching(async (id) => {\r\n        const response = await PostService.getCommentsByPostId(id)\r\n        setComments(response.data)\r\n    })\r\n\r\n    useEffect(() => {\r\n        fetchPostById(params.id)\r\n        fetchComments(params.id)\r\n    }, [])\r\n    return (\r\n        <div className=\"userPage\">\r\n            <h1>Страница пользователя с id:{params.id}</h1>\r\n            {isLoading\r\n                ? <Loader />\r\n                : <div className=\"userPage__title\">{post.id}{post.title}</div>\r\n            }\r\n            <h1>\r\n                Комментарии\r\n            </h1>\r\n            {isComLoading\r\n                ? <Loader />\r\n                : <div className=\"userPage__comments\">\r\n                    {comments.map(c =>\r\n                        <div key={c.id}>\r\n                            <h5>{c.email}</h5>\r\n                            <div>{c.body}</div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostIdPage\r\n","import React, { useContext } from 'react'\r\nimport { MyButton, MyInput } from '../components/index'\r\nimport { AuthContext } from '../context'\r\n\r\nconst Login = () => {\r\n    const { isAuth, setIsAuth } = useContext(AuthContext)\r\n\r\n    const login = (e) => {\r\n        e.preventDefault()\r\n        setIsAuth(true)\r\n        localStorage.setItem('auth', 'true')\r\n    }\r\n    return (\r\n        <div className=\"loginPage\">\r\n            <h1>LOGIN PAGE</h1>\r\n            <form className=\"loginPage-form\" onSubmit={login}>\r\n                <MyInput type=\"text\" placeholder=\"Введите логин...\" />\r\n                <MyInput type=\"password\" placeholder=\"Введите пароль...\" />\r\n                <MyButton>Войти</MyButton>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { useContext } from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport { AuthContext } from '../../context'\r\nimport { privateRoutes, publicRoutes, } from '../../router/router'\r\nimport Loader from './Loader/Loader'\r\n\r\nconst AppRouter = () => {\r\n\r\n    const { isAuth, isLoading } = useContext(AuthContext)\r\n\r\n    if (isLoading) {\r\n        return <Loader />\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            {isAuth\r\n                ?\r\n                <Switch>\r\n                    {privateRoutes.map(route =>\r\n                        <Route\r\n                            key={route.path}\r\n                            path={route.path}\r\n                            component={route.component}\r\n                            exact={route.exact} />\r\n                    )}\r\n                    <Redirect to=\"/posts\" />\r\n                </Switch>\r\n                :\r\n                <Switch>\r\n                    {publicRoutes.map(route =>\r\n                        <Route\r\n                            key={route.path}\r\n                            path={route.path}\r\n                            component={route.component}\r\n                            exact={route.exact} />\r\n                    )}\r\n                    <Redirect to=\"/login\" />\r\n                </Switch>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppRouter\r\n","import React from 'react'\r\nimport classes from './MyInput.module.css'\r\n\r\n//прокидывание рефа. Оборачиваем в React.forwardRef\r\nconst MyInput = React.forwardRef((props, ref) => {\r\n    return (\r\n        <input ref={ref}\r\n            className={classes.myInput} {...props} />\r\n    )\r\n})\r\n\r\nexport default MyInput\r\n","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { MyButton } from '../components/index'\r\n\r\nconst PostItem = ({ number, remove, post }) => {\r\n    const router = useHistory()\r\n    return (\r\n        <div className=\"post\">\r\n            <div className=\"post__content\">\r\n                <strong>{post.id}. {post.title}</strong>\r\n                <div>\r\n                    {post.body}\r\n                </div>\r\n            </div>\r\n            <div className=\"post__btns\">\r\n                <div className=\"post__btns-item\">\r\n                    <MyButton onClick={() => router.push(`/posts/${post.id}`)}>\r\n                        открыть\r\n                    </MyButton>\r\n                </div>\r\n                <div className=\"post__btns-item\">\r\n                    <MyButton onClick={() => remove(post)}>удалить</MyButton>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostItem\r\n","import React, { useEffect, useState } from 'react'\nimport { BrowserRouter } from 'react-router-dom'\nimport { AppRouter, Navbar } from './components/index'\nimport { AuthContext } from './context'\n\nconst App = () => {\n  const [isAuth, setIsAuth] = useState(false)\n  const [isLoading, setLoading] = useState(true)\n\n  useEffect(() => {\n    if (localStorage.getItem('auth')) {\n      setIsAuth(true)\n    }\n    setLoading(false)\n  }, [])\n\n  return (\n    <AuthContext.Provider value={{\n      isAuth,\n      setIsAuth,\n      isLoading,\n    }}>\n      <BrowserRouter>\n        <Navbar />\n        <AppRouter />\n      </BrowserRouter>\n    </AuthContext.Provider>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}